language: python
sudo: required

matrix:
  include:
    - dist: trusty
      env: dist="14.04 LTS trusty"
    - dist: xenial
      env: dist="16.04 LTS xenial"

env:
  global:
    - secure: "DR3lxFc1HRQymJKVcadcDYvRCa6ZiBCxamuKo5wXQKcgEBEXNpXOmRe8ZQbFfahRDr23FAbyhz7Q9Fi1b+g1rf9+gM6cMsyZ41uPu3da71zUjyW7BjordOQwBsvP6TfYn8GEIt6ZCG1dahGR5Bk/fk4ku0KZQR63ctvM7ktAhyvSo4nRS/zcswMAntvhe7ObkkBIKe0pOsxbhS2yUaHOFmJuM9G0umo2LhqCioeiA6UGzeOj0nKkL4F9TNc9OB46johiHQ0kTojCNcOagYjhrwK6Zepn7adIzNEA6n0n5Dt41UbLFu2jfftrNbcmr0Lzegcxcm11J1EHrBRCqHcwGDm++dWGqWCUmhB28dxUcP1++rbtzEo+rbCnQ2rmp1HA/XfLDA/8Wd+2FhcUm6SuilndaTb2AnIovBxjWRux5MzyiVLYZmSL6M1bWjEb82M6miKGz0fc3eLXKYjMMU8KaLTObWwy3C2Uu3OmMajnXJ/FG9xwJMMuGeAbErcHX02vPUbHKOmi+oLzSFNwDq9XNGWfb+GcG+kNNXLnj3x04lR+94VSMEFYpGnEOjB9bIzvVK2znbCyBc5vL4K31kVJQ82BdpFFAytcRy8rfW6zx5igcmdZpkCnFlOfeyxWopimjpob7GGNPha3Xlu3GMuDnXixNFCy4ZtX9yIJHa4XhXI=" # DOCKER_USER
    - secure: "DNR3PyBDPkGaR49IDZKcw+On7TEnkcqWk6bA+y6MIsRqUuDTltuj5PQ6bzkqO9mrBa2CY9ea5KlFAykZ0Y1etwHESIURzDPDJSI8wpf/fiwVfefkVI9LlC6GzyxLPh2nUEMBXLtOFyOwROZdkXG5DdrCk6sZG7fnuxG7rxQ9CMrXB/iW9jf+qC1fMsMBpX6kGlkNUU8Ms7zeqj2NVgUevjigysIm+JBwIKXodIPiLWsMyZA1MMWNxe1Nwa7fBSFcWhGxPmO1jN0+y+2XyX2k2aHirlHC0Sx3Q5rCzqEEAnKqVc9D4Yr5vFgrM+/EjDO3XRTHMQgCtTBMEsY2xw0oqEjmVcrqCg7JfgEbigS6A3GatQAWB22//oHjueenTV9aF2q93QTFn47AIXkQ0RwZxridc/JMG5k70lgsAkcik0hV4BegsNETSyT/92dv2XTu252ErRkendz+OtW5BWyKh9mBVm+DpbYsPOAlByH2g+sWp7+ErG1c7w1eTCGsMtmMahmRWXUtKKAFx1dBHBuej8gyiILOT5tgtdIqaqkP96XLEQiul/yhROIsI1bJ6Hzv6F1qpOJ9yYr5jTqjfBztpWZrTIoY3CRhyQ7DnH3DLX7TpGIejm1r6amQj12L6E4MVVl/hbBrEr2R1wLnyrHpbv36wvPk/NH2CxNEJYZXx0M=" # DOCKER_PASS
    - COMMIT=${TRAVIS_COMMIT::8}

virtualenv:
  system_site_packages: true

before_install:
  - sudo apt-get -qq update
  - sudo DEBIAN_FRONTEND=noninteractive apt-get -y install ansible libffi-dev libssl-dev

# installation
install:
  - cd ansible; sudo ansible-playbook -i "localhost," -c local -v install.yml; cd ..

# run tests
script:
  - env
  - sudo py.test -v mininet/test/test_containernet.py

# do docker build and push to dockerhub (use only 14.04 for this)
after_success:
  - if [ "$dist" == "14.04 LTS trusty" ]; then
    docker login u="$DOCKER_USER" -p="$DOCKER_PASS"
    export REPO=containernet/containernet;
    export TAG=`if [ -n "$TRAVIS_PULL_REQUEST_BRANCH" ]; then echo "pr$TRAVIS_PULL_REQUEST"; else echo "latest"; fi`;
    docker build -t $REPO:$COMMIT .;
    docker tag $REPO:$COMMIT $REPO:$TAG;
    docker images;
    docker push $REPO:$TAG;
    fi

notifications:
  email:
    on_success: change
    on_failure: always
