language: python
sudo: required

matrix:
  include:
    - dist: trusty
      env: dist="14.04 LTS trusty"
    - dist: xenial
      env: dist="16.04 LTS xenial"

env:
  global:
    - secure: "DR3lxFc1HRQymJKVcadcDYvRCa6ZiBCxamuKo5wXQKcgEBEXNpXOmRe8ZQbFfahRDr23FAbyhz7Q9Fi1b+g1rf9+gM6cMsyZ41uPu3da71zUjyW7BjordOQwBsvP6TfYn8GEIt6ZCG1dahGR5Bk/fk4ku0KZQR63ctvM7ktAhyvSo4nRS/zcswMAntvhe7ObkkBIKe0pOsxbhS2yUaHOFmJuM9G0umo2LhqCioeiA6UGzeOj0nKkL4F9TNc9OB46johiHQ0kTojCNcOagYjhrwK6Zepn7adIzNEA6n0n5Dt41UbLFu2jfftrNbcmr0Lzegcxcm11J1EHrBRCqHcwGDm++dWGqWCUmhB28dxUcP1++rbtzEo+rbCnQ2rmp1HA/XfLDA/8Wd+2FhcUm6SuilndaTb2AnIovBxjWRux5MzyiVLYZmSL6M1bWjEb82M6miKGz0fc3eLXKYjMMU8KaLTObWwy3C2Uu3OmMajnXJ/FG9xwJMMuGeAbErcHX02vPUbHKOmi+oLzSFNwDq9XNGWfb+GcG+kNNXLnj3x04lR+94VSMEFYpGnEOjB9bIzvVK2znbCyBc5vL4K31kVJQ82BdpFFAytcRy8rfW6zx5igcmdZpkCnFlOfeyxWopimjpob7GGNPha3Xlu3GMuDnXixNFCy4ZtX9yIJHa4XhXI=" # DOCKER_USER
    - secure: "HVq/JAJi0tQPbPFqqtAUHOKfcFR5yqJ1eXxpg3UKkrxQ2hHjDVLAMg7kRAx6jXSl3JvczdU9SJJtDLmVGywMVvq1fs+aACiSUJwnCJi8ktnZQuScaWUGJvcaXlgMsZ1jUUE4t0sjwaLM3EF45Mhq8jAZ6Z9oBNyKT6M6DQJBGACQibRfLGK3KlprtHDw29065Vv6jYTYYv8poMLdF6T8Brqbkawql4ppwo/CrEdXswAIF6wPNuc2la+5kqqUAEIsfgsG0Hi/HS8FEILG6bAxx1dQTnJzBRVjUXKAxa00Vj1BMzUq6OA83yLpI4TCkaasTQJChqYHiKd0/vSE2Rz4caI8yqIKYcWVsxUXAkQiyxKZmQ9CfZuXKnn3ZO1p1L9rnX9/577q3g9nWy+Hs0uwd8wRfqaiP/p8ac41nEQsYmOIfm+lYUbYVciEX4ovtIxKFLsH6vS5wMedsIjkr8dICWG3XwCeDM5Bv/P7cuVR50r0LZxfOMviKDjHg0qDH9Ate5AvloJpjAE6P0ef7DeevNfFDCE8zSnb1Wbbfi/Gj6Z7nUu2FLa0u4bpckeE1Ug0pixxtcrceJawk7oPIpa9QVhAh4ckXogtwbuMh9OlKsvLTkizyTrpi6CUstNPpAc6w2HdR3+FiPjbfChL49KJ93DSTMu8JER7RlaCGrFrBuY=" # DOCKER_PASS
    - COMMIT=${TRAVIS_COMMIT::8}

virtualenv:
  system_site_packages: true

before_install:
  - sudo apt-get -qq update
  - sudo DEBIAN_FRONTEND=noninteractive apt-get -y install ansible libffi-dev libssl-dev

# installation
install:
  - cd ansible; sudo ansible-playbook -i "localhost," -c local -v install.yml; cd ..

# run tests
script:
  - env
  - sudo py.test -v mininet/test/test_containernet.py

# do docker build and push to dockerhub (use only 14.04 for this)
after_success:
  - if [ "$dist" == "14.04 LTS trusty" ]; then
    docker login u="$DOCKER_USER" -p="$DOCKER_PASS";
    export REPO="containernet/containernet";
    export TAG=`if [ -n "$TRAVIS_PULL_REQUEST_BRANCH" ]; then echo "pr$TRAVIS_PULL_REQUEST"; else echo "latest"; fi`;
    docker build -t $REPO:$COMMIT .;
    docker tag $REPO:$COMMIT $REPO:$TAG;
    docker images;
    docker push $REPO:$TAG;
    fi

notifications:
  email:
    on_success: change
    on_failure: always
